;; Auto-generated. Do not edit!


(when (boundp 'alpheus_actions::headingFeedback)
  (if (not (find-package "ALPHEUS_ACTIONS"))
    (make-package "ALPHEUS_ACTIONS"))
  (shadow 'headingFeedback (find-package "ALPHEUS_ACTIONS")))
(unless (find-package "ALPHEUS_ACTIONS::HEADINGFEEDBACK")
  (make-package "ALPHEUS_ACTIONS::HEADINGFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude headingFeedback.msg.html


(defclass alpheus_actions::headingFeedback
  :super ros::object
  :slots (_heading_error ))

(defmethod alpheus_actions::headingFeedback
  (:init
   (&key
    ((:heading_error __heading_error) 0.0)
    )
   (send-super :init)
   (setq _heading_error (float __heading_error))
   self)
  (:heading_error
   (&optional __heading_error)
   (if __heading_error (setq _heading_error __heading_error)) _heading_error)
  (:serialization-length
   ()
   (+
    ;; float32 _heading_error
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _heading_error
       (sys::poke _heading_error (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _heading_error
     (setq _heading_error (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get alpheus_actions::headingFeedback :md5sum-) "5f1b6285c1393230e9f909df240d5f12")
(setf (get alpheus_actions::headingFeedback :datatype-) "alpheus_actions/headingFeedback")
(setf (get alpheus_actions::headingFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback
float32 heading_error


")



(provide :alpheus_actions/headingFeedback "5f1b6285c1393230e9f909df240d5f12")


